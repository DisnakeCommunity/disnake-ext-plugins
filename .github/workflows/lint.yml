name: Lint and Test

on: [push, pull_request]

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install poetry
        run: |
          python -m pip install poetry~=1.1.14

      - name: Install dependencies
        run: poetry install

      - name: Lint
        run: |
          poetry run black src/disnake/ext/plugins examples --check
          poetry run isort src/disnake/ext/plugins examples -c
          poetry run flake8 src/disnake/ext/plugins examples

  # test:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #       python-version: ["3.8", "3.9", "3.10"]

  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install poetry
  #       run: |
  #         python -m pip install poetry~=1.1.14

  #     - name: Install dependencies
  #       run: |
  #         poetry install

  #     - name: Run tests
  #       run: |
  #         python -m pytest

  pyright:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install requirements
        run: |
          poetry install

      - name: Run pyright
        run: |
          poetry run pyright
